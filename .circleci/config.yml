# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

#Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  print_pipeline_id: 
    steps:
      - run : echo ${CIRCLE_WORKFLOW_ID}

jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo world
  say-name:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo $MY_NAME

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  say_command_job: 
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  
  failure_job: 
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run: 
          name: on error
          command: echo 'Hello Error'
          when: on_fail
  


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print_hello
      - say-name
      - save_hello_world_output
      - say_command_job
      - failure_job
      - print_output_file:
          requires:
            - save_hello_world_output
      - print_world:
          requires:
            - print_hello
